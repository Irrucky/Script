name: Update Rules

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0,12 * * *'

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        repository: Irrucky/Tool
        path: Tool-repo
        
    - name: Copy Rules
      run: |
        mkdir -p Tool-repo/Surge/rules
        
        # Ads_AWAvenue.list
        {
            curl -L "https://raw.githubusercontent.com/TG-Twilight/AWAvenue-Ads-Rule/main/Filters/AWAvenue-Ads-Rule-Surge-RULE-SET.list"
        } > Tool-repo/Surge/rules/Ads_AWAvenue.list
        
        # Ads.list
        {
            curl -L "https://raw.githubusercontent.com/RuCu6/Loon/main/Rules/MyBlockAds.list"
            echo ""
            curl -L "https://raw.githubusercontent.com/RuCu6/Loon/main/Rules/PornAds.list"
            echo ""
            curl -L "https://raw.githubusercontent.com/VirgilClyne/GetSomeFries/main/ruleset/HTTPDNS.Block.list"
        } >> Tool-repo/Surge/rules/Ads.list
        
        # adrules.list
        {
            curl -L "https://raw.githubusercontent.com/Irrucky/Tool/main/Surge/rules/Ads.list"
            echo ""
            curl -L "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/BanAD.list"
            echo ""
            curl -L "https://raw.githubusercontent.com/Repcz/Tool/X/Surge/Rules/Ads_limbopro.list"
            echo ""
            curl -L "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/BanProgramAD.list"
            echo ""
            curl -L "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/BanEasyListChina.list"
            echo ""
            curl -L "https://raw.githubusercontent.com/Irrucky/Tool/main/Surge/rules/Ads_AWAvenue.list"
            echo ""
            curl -L "https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Extra/Reject/Advertising.list"
            echo ""
            curl -L "https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Extra/Reject/Malicious.list"
            echo ""
            curl -L "https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Extra/Reject/Tracking.list"
        } > Tool-repo/Surge/rules/adrules.list
        
        # Reject.list
        {
            curl -L "https://raw.githubusercontent.com/Irrucky/Tool/main/Surge/rules/Ads.list"
            echo ""
            curl -L "https://raw.githubusercontent.com/Cats-Team/AdRules/main/adrules-surge.conf"
            echo ""
            curl -L "https://raw.githubusercontent.com/privacy-protection-tools/anti-AD/master/anti-ad-surge.txt"
        } > Tool-repo/Surge/rules/Reject.list
        
        # Global.list
        {
            curl -L "https://raw.githubusercontent.com/Repcz/Tool/X/Surge/Rules/AppleProxy.list"
            echo ""
            curl -L "https://raw.githubusercontent.com/Repcz/Tool/X/Surge/Rules/Telegram.list"
            echo ""
            curl -L "https://raw.githubusercontent.com/Repcz/Tool/X/Surge/Rules/Porn.list"
            echo ""
            curl -L "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Spotify/Spotify.list"
            echo ""
            curl -L "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/YouTube/YouTube.list"
            echo ""
            curl -L "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Google/Google.list"
            echo ""
            curl -L "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/GitHub/GitHub.list"
            echo ""
            curl -L "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Pinterest/Pinterest.list"
            echo ""
            curl -L "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Speedtest/Speedtest.list"
            echo ""
            curl -L "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Twitter/Twitter.list"
            echo ""
            curl -L "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Instagram/Instagram.list"
            echo ""
            curl -L "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/PayPal/PayPal.list"
            echo ""
            curl -L "https://raw.githubusercontent.com/Centralmatrix3/Scripts/master/Ruleset/18comic.list"
            echo ""
            curl -L "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/GitLab/GitLab.list"
            echo ""
            curl -L "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Gitee/Gitee.list"
        } > Tool-repo/Surge/rules/Global.list
        
        # GitHub+.list
        {
            curl -L "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/GitLab/GitLab.list"
            echo ""
            curl -L "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/GitHub/GitHub.list"
            echo ""
            curl -L "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Gitee/Gitee.list"
        } > Tool-repo/Surge/rules/GitHub+.list
        
        # Porn+.list
        {
            curl -L "https://raw.githubusercontent.com/Centralmatrix3/Scripts/refs/heads/master/Ruleset/18comic.list"
            echo ""
            curl -L "https://raw.githubusercontent.com/Repcz/Tool/X/Surge/Rules/Porn.list"
            echo ""
            curl -L "https://raw.githubusercontent.com/Centralmatrix3/Scripts/refs/heads/master/Surge/Ruleset/PornHub.list"
        } >> Tool-repo/Surge/rules/Porn+.list

        
    # 复刻@shawn资源解析器
    - name: Copy resourse-parser
      run: |
        mkdir -p Tool-repo/QuantumultX/Script
        curl -L -o Tool-repo/QuantumultX/Script/resourse-parser.js "https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/resource-parser.js"

    - name: Process Files
      run: |
        cd Tool-repo/Surge/rules
        for file in Ads.list; do
          if [ -f "$file" ]; then
            sed -i -e 's/IP-CIDR,[[:space:]]*/IP-CIDR,/g' \
                   -e 's/DOMAIN-WILDCARD,[[:space:]]*/DOMAIN-WILDCARD,/g' \
                   -e 's/DOMAIN,[[:space:]]*/DOMAIN,/g' \
                   -e 's/IP-CIDR6,[[:space:]]*/IP-CIDR6,/g' \
                   -e 's/DOMAIN-SUFFIX,[[:space:]]*/DOMAIN-SUFFIX,/g' \
                   -e 's/DOMAIN-KEYWORD,[[:space:]]*/DOMAIN-KEYWORD,/g' \
                   -e 's/,REJECT$//g' \
                   -e 's/,DIRECT$//g' \
                   -e 's/,reject$//g' \
                   -e 's/,direct$//g' \
                   -e 's/,[[:space:]]*/,/g' \
                   "$file"
          else
            echo "$file not found."
          fi
        done
        
        for file in Ads_AWAvenue.list Reject.list adrules.list; do
          if [ -f "$file" ]; then
            if [ "$file" = "Ads_AWAvenue.list" ]; then
              sed -i -e 's/,REJECT$//g' \
                     -e 's/,DIRECT$//g' \
                     -e 's/,reject$//g' \
                     -e 's/,direct$//g' \
                     -e '/DOMAIN-KEYWORD/d' \
                     "$file"
            else
              sed -i -e 's/DOMAIN,/DOMAIN-SUFFIX,/g' "$file"
            fi
          else
            echo "$file not found."
          fi
        done

    - name: Regular Files
      run: |
        cd Tool-repo/Surge/rules
        for file in *.list; do
          if [ -f "$file" ]; then
            sed -i -e '/^\s*[#;]/d' \
                   -e '/^$/d' \
                   -e 's| //.*||' \
                   -e '/PROCESS-NAME\|URL-REGEX/d' \
                   "$file"
            awk '/^IP-/ {if (!/no-resolve/) {print $0",no-resolve"; next}} {print}' "$file" > temp && mv temp "$file"
            awk '!seen[tolower($0)]++' "$file" | sort > "$file.tmp" && mv "$file.tmp" "$file"
            filename=$(basename "$file" .list | tr '[:lower:]' '[:upper:]')
            line_count=$(wc -l < "$file")
            sed -i "1i# NAME: $filename" "$file"
            sed -i "2i# TOTAL: $line_count" "$file"
            # sed -i "3i# UPDATE: $(TZ='Etc/GMT-8' date +'%Y-%m-%d %H:%M:%S (GMT+8)')" "$file"
          else
            echo "$file not found."
          fi
        done
        
    - name: Push Update
      run: |
        cd Tool-repo
        if [[ -n $(git status -s) ]]; then
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add -A
          git commit -m "$(TZ='Asia/Shanghai' date +'%Y-%m-%d %H:%M:%S')"
          git push origin HEAD
        else
          echo "No changes to commit."
        fi
        
    - name: Cleanup Workflow
      uses: Mattraks/delete-workflow-runs@main
      with:
        retain_days: 0
        keep_minimum_runs: 2